{"version":3,"sources":["Components/Editor/EditorHeader/EditorHeader.tsx","Components/Editor/EditorFooter/EditorFooter.tsx","Models/File.ts","Models/Folder.ts","Services/FilesService.ts","Components/Editor/EditorBody/FileExplorerSidebar/FileComponent.tsx","Components/Editor/EditorBody/FileExplorerSidebar/FolderComponent.tsx","Components/Editor/EditorBody/FileExplorerSidebar/FileExplorerSidebar.tsx","Components/Editor/EditorBody/TabManager/Tab.tsx","Components/Editor/EditorBody/TabManager/TabManager.tsx","Components/Editor/EditorBody/FileViewer/OpenFileFromSidebar/OpenFileFromSidebar.tsx","Components/Editor/EditorBody/FileViewer/DownloadingFileContent/DownloadingFileContent.tsx","Components/Editor/EditorBody/FileViewer/FileViewer.tsx","Components/Editor/EditorBody/EditorBody.tsx","Components/Editor/Editor.tsx","App.tsx","serviceWorker.ts","index.tsx","icons/mobile-menu.svg","icons/file.svg","icons/folder-arrow.svg","icons/close.svg","icons/arrow-left.svg"],"names":["EditorHeader","react_default","a","createElement","className","src","MobileMenuToggleTriggerIcon","onClick","this","props","onMobileMenuToggled","style","flexGrow","Component","EditorFooter","currentFile","getPath","File","container","name","Object","classCallCheck","Folder","parentFolder","content","fileOrFolder","push","isRoot","concat","filePath","console","log","pieces","split","splice","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","getFileOrNull","join","err","return","FILE_INDEX_URL","FilesService","getRoot","_getRoot","asyncToGenerator","regenerator_default","mark","_callee","jsonRoot","wrap","_context","prev","getAsJson","sent","abrupt","mapJsonFolderToRoot","stop","apply","arguments","getFileContent","_getFileContent","_callee2","file","url","res","_context2","fetch","text","_x","_ref","_callee3","_context3","json","_x2","jsonFolder","root","createRoot","insertFilesAndFoldersInFolder","forEach","jsonFileOrFolder","type","add","folder","FileComponent","_Component","_getPrototypeOf2","_this","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","onOpenFile","event","stopPropagation","inherits","createClass","key","alt","FileIcon","FolderComponent","state","expanded","handleClick","e","setState","_","classNames","FolderToggleTriggerIcon","renderChildren","_this2","map","renderFileOrFolder","FileComponent_FileComponent","FileExplorerSidebar","_this$props","getClasses","FolderComponent_FolderComponent","classes","mobileMenuOpen","Tab","onSelectFile","onCloseFile","isCurrent","CloseIcon","TabManager","openedFiles","Tab_Tab","OpenFileFromSidebar","LeftArrow","DownloadingFileContent","role","FileViewer","markdownRenderer","MarkdownIt","html","use","MarkdownItContainer","prevProps","prevState","snapshot","downloadFileContent","renderFileContent","DownloadingFileContent_DownloadingFileContent_DownloadingFileContent","OpenFileFromSidebar_OpenFileFromSidebar_OpenFileFromSidebar","render","dangerouslySetInnerHTML","__html","EditorBody","FileExplorerSidebar_FileExplorerSidebar_FileExplorerSidebar","TabManager_TabManager_TabManager","FileViewer_FileViewer_FileViewer","Editor","handleMobileMenuToggled","handleOpenFile","fileToOpen","newState","isFileAlreadyOpenInState","getStateUpdateWithFileAsCurrent","getStateUpdateWithNewOpenFile","updateUrlWithCurrentFile","objectSpread","indexOf","toConsumableArray","history","pushState","handleCloseFile","fileToClose","getFileArrayWithoutFile","files","copy","fetchRoot","openFileFromUrlOrDefault","error","t0","getFilePathFromUrlOrDefault","decodeURI","pathFromUrl","location","pathname","_this$state","EditorHeader_EditorHeader_EditorHeader","EditorBody_EditorBody_EditorBody","assign","EditorFooter_EditorFooter_EditorFooter","App","Editor_Editor_Editor","Boolean","window","hostname","match","require","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"gWAOqBA,mLAGb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAA6BC,QAASC,KAAKC,MAAMC,uBAK/DT,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAACC,SAAU,IAAvB,+BAX0BC,aCFrBC,0LAES,IACfC,EAAeP,KAAKC,MAApBM,YACP,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,WAEQY,GACAA,EAAYC,mBATMH,cCHrBI,aAEjB,SAAAA,EACoBC,EACAC,GACjBC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAS,GAAAT,KAAAU,YAAAV,KAAAW,6DAIC,OAAOX,KAAKU,UAAUF,UAAYR,KAAKW,cCT1BG,aAQjB,SAAAA,EACoBC,EACAJ,GACjBC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAc,GAAAd,KAAAe,eAAAf,KAAAW,OAAAX,KATHgB,QAA2B,iEAGvB,OAAO,IAAIF,EAAO,KAAM,sDAUxB,OAA6B,OAAtBd,KAAKe,yCAGZE,GACAjB,KAAKgB,QAAQE,KAAKD,qCAIlB,OAAIjB,KAAKmB,SACE,IAGX,GAAAC,OAAUpB,KAAKe,aAAaP,WAA5BY,OAAwCpB,KAAKW,KAA7C,2CAGUU,GACVC,QAAQC,IAAI,YAAaF,GACzB,IAAMG,EAASH,EAASI,MAAM,KAE9B,GAAID,EAAO,KAAOxB,KAAKW,KAGnB,OAAO,KAFPa,EAAOE,OAAO,EAAG,GALyB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAU9C,QAAAC,EAAAC,EAAmBhC,KAAKgB,QAAxBiB,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAiC,KAAtBU,EAAsBN,EAAAO,MAC7B,GAAID,EAAK1B,OAASa,EAAO,GACrB,OAAIa,aAAgB5B,EACT4B,EAEAA,EAAKE,cAAcf,EAAOgB,KAAK,OAfJ,MAAAC,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GAoB9C,OAAO,cChDTc,EAAc,GAAAvB,OADH,SACG,eAELwB,EAAA,CAELC,QAFK,eAAAC,EAAAlC,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAtD,EAAAuD,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAtD,EAAA0D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EAGgBoB,EAAUZ,GAH1B,cAGDQ,EAHCE,EAAAG,KAAAH,EAAAI,OAAA,SAIAC,EAAoBP,IAJpB,wBAAAE,EAAAM,SAAAT,MAAA,yBAAAJ,EAAAc,MAAA5D,KAAA6D,YAAA,GAOLC,eAPK,eAAAC,EAAAnD,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAtD,EAAAuD,KAAA,SAAAe,EAOUC,GAPV,IAAAC,EAAAC,EAAA,OAAAnB,EAAAtD,EAAA0D,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAjC,MAAA,cAQD+B,EARC,GAAA9C,OAHE,UAGFA,OAQmB6C,EAAKzD,WARxB4D,EAAAjC,KAAA,EAUWkC,MAAMH,GAVjB,cAUDC,EAVCC,EAAAZ,KAAAY,EAAAjC,KAAA,EAWMgC,EAAIG,OAXV,cAAAF,EAAAX,OAAA,SAAAW,EAAAZ,MAAA,wBAAAY,EAAAT,SAAAK,MAAA,gBAAAO,GAAA,OAAAR,EAAAH,MAAA5D,KAAA6D,YAAA,IAeTN,EAAS,eAAAiB,EAAA5D,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAtD,EAAAuD,KAAG,SAAAwB,EAAOP,GAAP,IAAAC,EAAA,OAAAnB,EAAAtD,EAAA0D,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EACIkC,MAAMH,GADV,cACRC,EADQO,EAAAlB,KAAAkB,EAAAvC,KAAA,EAEDgC,EAAIQ,OAFH,cAAAD,EAAAjB,OAAA,SAAAiB,EAAAlB,MAAA,wBAAAkB,EAAAf,SAAAc,MAAH,gBAAAG,GAAA,OAAAJ,EAAAZ,MAAA5D,KAAA6D,YAAA,GAKTH,EAAsB,SAACmB,GACzB,IAAMC,EAAOhE,EAAOiE,aAEpB,OADAC,EAA8BF,EAAMD,GAC7BC,GAGLE,EAAgC,SAAhCA,EAAiCtE,EAAmBmE,GACtDA,EAAWI,QAAQ,SAAAC,GACf,GAA8B,SAA1BA,EAAiBC,KACjBzE,EAAU0E,IAAI,IAAI3E,EAAKC,EAAWwE,EAAiBvE,WAChD,CACH,IAAM0E,EAAS,IAAIvE,EAAOJ,EAAWwE,EAAiBvE,MACtDqE,EAA8BK,EAAQH,EAAiBlE,SACvDN,EAAU0E,IAAIC,iDCjCbC,SAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAA7E,OAAAC,EAAA,EAAAD,CAAAZ,KAAAsF,GAAA,QAAAI,EAAA7B,UAAA8B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjC,UAAAiC,GAAA,OAAAL,EAAA7E,OAAAmF,EAAA,EAAAnF,CAAAZ,MAAAwF,EAAA5E,OAAAoF,EAAA,EAAApF,CAAA0E,IAAAW,KAAArC,MAAA4B,EAAA,CAAAxF,MAAAoB,OAAAwE,MAYIM,WAAa,SAACC,GACVA,EAAMC,kBACNX,EAAKxF,MAAMiG,WAAWT,EAAKxF,MAAMgE,OAdzCwB,EAAA,OAAA7E,OAAAyF,EAAA,EAAAzF,CAAA0E,EAAAC,GAAA3E,OAAA0F,EAAA,EAAA1F,CAAA0E,EAAA,EAAAiB,IAAA,SAAAjE,MAAA,WAE8B,IACf2B,EAAQjE,KAAKC,MAAbgE,KACP,OACIxE,EAAAC,EAAAC,cAAA,QAAMI,QAASC,KAAKkG,WAAYtG,UAAU,sBACtCH,EAAAC,EAAAC,cAAA,OAAK6G,IAAI,YAAY3G,IAAK4G,IAAU7G,UAAU,cAC7CqE,EAAKtD,UAPtB2E,EAAA,CAAmCjF,uCCGtBqG,EAAb,SAAAnB,GAAA,SAAAmB,IAAA,IAAAlB,EAAAC,EAAA7E,OAAAC,EAAA,EAAAD,CAAAZ,KAAA0G,GAAA,QAAAhB,EAAA7B,UAAA8B,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjC,UAAAiC,GAAA,OAAAL,EAAA7E,OAAAmF,EAAA,EAAAnF,CAAAZ,MAAAwF,EAAA5E,OAAAoF,EAAA,EAAApF,CAAA8F,IAAAT,KAAArC,MAAA4B,EAAA,CAAAxF,MAAAoB,OAAAwE,MAEIe,MAA8B,CAC1BC,UAAU,GAHlBnB,EA0BIoB,YAAgC,SAACC,GAC7BA,EAAEV,kBACGX,EAAKxF,MAAMoF,OAAOlE,UACnBsE,EAAKsB,SAAS,SAAAvC,EAAawC,GAAb,MAAoB,CAACJ,UAArBpC,EAAEoC,aA7B5BnB,EAAA,OAAA7E,OAAAyF,EAAA,EAAAzF,CAAA8F,EAAAnB,GAAA3E,OAAA0F,EAAA,EAAA1F,CAAA8F,EAAA,EAAAH,IAAA,SAAAjE,MAAA,WAM8B,IACf+C,EAAUrF,KAAKC,MAAfoF,OACAuB,EAAY5G,KAAK2G,MAAjBC,SACP,OACInH,EAAAC,EAAAC,cAAA,OAAKI,QAASC,KAAK6G,YACdjH,UAAWqH,IAAW,CAAC5B,QAAQ,EAAMuB,cACtCnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAENyF,EAAOlE,UACR1B,EAAAC,EAAAC,cAAA,OAAK6G,IAAI,cAAc3G,IAAKqH,IAAyBtH,UAAU,mBAElEyF,EAAO1E,MAGRX,KAAKmH,oBApBzB,CAAAZ,IAAA,iBAAAjE,MAAA,WAiCqB,IAAA8E,EAAApH,KACNqF,EAAUrF,KAAKC,MAAfoF,OACP,OACI5F,EAAAC,EAAAC,cAAA,UAEQ0F,EAAOrE,QAAQqG,IAAI,SAAApG,GAAY,OAC3BxB,EAAAC,EAAAC,cAAA,MAAI4G,IAAKtF,EAAaT,WAEd4G,EAAKE,mBAAmBrG,SAzCxD,CAAAsF,IAAA,qBAAAjE,MAAA,SAkDuBrB,GAA8C,IACtDiF,EAAclG,KAAKC,MAAnBiG,WACP,OAAIjF,aAAwBR,EACjBhB,EAAAC,EAAAC,cAAC4H,EAAD,CAAetD,KAAMhD,EAAciF,WAAYA,IAC/CjF,aAAwBH,EACxBrB,EAAAC,EAAAC,cAAC+G,EAAD,CAAiBrB,OAAQpE,EAAciF,WAAYA,IAEnDzG,EAAAC,EAAAC,cAAA,kCAzDnB+G,EAAA,CAAqCrG,aCDhBmH,mLAEG,IAAAC,EACWzH,KAAKC,MAAzB6E,EADS2C,EACT3C,KAAMoB,EADGuB,EACHvB,WACb,OACIzG,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,KAAK0H,eAEZ5C,GACDrF,EAAAC,EAAAC,cAAA,wBAIAmF,GACArF,EAAAC,EAAAC,cAACgI,EAAD,CAAiBtC,OAAQP,EAAMoB,WAAYA,0CAOvD,IAAI0B,EAAU,yBAId,OAHI5H,KAAKC,MAAM4H,iBACXD,GAAW,oBAERA,SAxBkCvH,sCCFpCyH,EAAmC,SAAAtD,GAAA,IAAEP,EAAFO,EAAEP,KAAM8D,EAARvD,EAAQuD,aAAcC,EAAtBxD,EAAsBwD,YAAaC,EAAnCzD,EAAmCyD,UAAnC,OAC5CxI,EAAAC,EAAAC,cAAA,OAAKC,UAAS,OAAAwB,OAAS6G,EAAY,cAAgB,IAAMlI,QAASgI,GAE1D9D,EAAKtD,KAETlB,EAAAC,EAAAC,cAAA,OAAKI,QAAS,SAAA+G,GAAMA,EAAEV,kBAAmB4B,MACrCvI,EAAAC,EAAAC,cAAA,OAAK6G,IAAI,YAAY3G,IAAKqI,SCLjBC,0LAES,IAAAV,EACsCzH,KAAKC,MAA1DmI,EADeX,EACfW,YAAa7H,EADEkH,EACFlH,YAAa2F,EADXuB,EACWvB,WAAY8B,EADvBP,EACuBO,YAC7C,OACIvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEPwI,EAAYf,IAAI,SAAApD,GAAI,OAChBxE,EAAAC,EAAAC,cAAC0I,EAAD,CAAK9B,IAAKtC,EAAKtD,KACVsD,KAAMA,EACNgE,UAAWhE,IAAS1D,EACpBwH,aAAc,kBAAM7B,EAAWjC,IAC/B+D,YAAa,kBAAMA,EAAY/D,gBAZpB5D,iFCF3BiI,UAA+C,kBACxD7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAK6G,IAAI,yBAAyB3G,IAAK0I,MACvC9I,EAAAC,EAAAC,cAAA,yCCLK6I,UAAkD,kBAC3D/I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAAyC6I,KAAK,YAFrE,qBCOiBC,6MAETC,iBAAmB,IAAIC,IAAW,CAACC,MAAM,IAC5CC,IAAIC,IAAqB,gBACzBD,IAAIC,IAAqB,2CAE9BpC,MAAoC,CAChC3F,QAAS,gIAGYgI,EAAsCC,EAAyBC,sEAChFlJ,KAAKC,MAAMM,cAAgByI,EAAUzI,6EAGnCP,KAAKmJ,8RAIXnJ,KAAK+G,SAAS,CAAC/F,QAAS,OAEL,OADZT,EAAeP,KAAKC,MAApBM,8EAIeqC,EAAakB,eAAevD,UAA5CS,SACNhB,KAAK+G,SAAS,CAAC/F,+IAIf,OAAKhB,KAAKC,MAAMM,YAEJP,KAAK2G,MAAM3F,QAGhBhB,KAAKoJ,oBAFD3J,EAAAC,EAAAC,cAAC0J,EAAD,MAFA5J,EAAAC,EAAAC,cAAC2J,EAAD,kDAQX,GAAKtJ,KAAK2G,MAAM3F,QAAhB,CAGA,IAAM6H,EAAO7I,KAAK2I,iBAAiBY,OAAOvJ,KAAK2G,MAAM3F,SACrD,OACIvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACV4J,wBAAyB,CAACC,OAAQZ,cA5CfxI,aCJ3BqJ,UAAuD,SAAAlF,GAAA,IAAEM,EAAFN,EAAEM,KAAMsD,EAAR5D,EAAQ4D,YAAa7H,EAArBiE,EAAqBjE,YAAa2F,EAAlC1B,EAAkC0B,WAAY8B,EAA9CxD,EAA8CwD,YAAaH,EAA3DrD,EAA2DqD,eAA3D,OAChEpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACgK,EAAD,CAAqB7E,KAAMA,EAAMvE,YAAaA,EAAa2F,WAAYA,EAAY2B,eAAgBA,IAEnGpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACiK,EAAD,CAAYrJ,YAAaA,EAAa6H,YAAaA,EAAalC,WAAYA,EAAY8B,YAAaA,IACrGvI,EAAAC,EAAAC,cAACkK,EAAD,CAAYtJ,YAAaA,QCHhBuJ,6MAEjBnD,MAAqB,CACjB7B,KAAM,KACNsD,YAAa,GACb7H,YAAa,KAEbsH,gBAAgB,KAkDpBkC,wBAA0B,WACtBtE,EAAKsB,SAAS,SAAAvC,GACV,MAAO,CACHqD,gBAF4BrD,EAApBqD,qBAQpBmC,eAAiB,SAACC,GAAD,OAAsBxE,EAAKsB,SAAS,SAAAJ,GACjD,IAAIuD,EAOJ,OALIA,EADAzE,EAAK0E,yBAAyBxD,EAAOsD,GAC1BxE,EAAK2E,gCAAgCH,GAErCxE,EAAK4E,8BAA8B1D,EAAOsD,GAEzDxE,EAAK6E,yBAAyBJ,EAAS3J,aAChCK,OAAA2J,EAAA,EAAA3J,CAAA,GACAsJ,EADP,CAEIrC,gBAAgB,SAKxBsC,yBAA2B,SAACxD,EAAoB1C,GAArB,OAAoC0C,EAAMyB,YAAYoC,QAAQvG,IAAS,KAElGmG,gCAAkC,SAACnG,GAAD,MAAiB,CAAC1D,YAAa0D,MAEjEoG,8BAAgC,SAAC1D,EAAoBsD,GAArB,MAA2C,CACvE7B,YAAW,GAAAhH,OAAAR,OAAA6J,EAAA,EAAA7J,CAAM+F,EAAMyB,aAAZ,CAAyB6B,IACpC1J,YAAa0J,MAGjBK,yBAA2B,SAAC/J,GAExBmK,QAAQC,UAAU,GAAIpK,EAAYI,KAAMJ,EAAYC,cAGxDoK,gBAAkB,SAACC,GAAD,OAAuBpF,EAAKsB,SAAS,SAACJ,GACpD,IAAMyB,EAAc3C,EAAKqF,wBAAwBnE,EAAMyB,YAAayC,GACpE,MAAO,CACHzC,cACA7H,YAAaoG,EAAMpG,cAAgBsK,EAAczC,EAAYA,EAAYzC,OAAS,GAAKgB,EAAMpG,kBAIrGuK,wBAA0B,SAACC,EAAe9G,GACtC,IAAM+G,EAAIpK,OAAA6J,EAAA,EAAA7J,CAAOmK,GAEjB,OADAC,EAAKtJ,OAAOsJ,EAAKR,QAAQvG,GAAO,GACzB+G,oNA/FYhL,KAAKiL,mBAAlBnG,SACN9E,KAAK+G,SAAS,CAACjC,SACf9E,KAAKkL,yBAAyBpG,0QAKblC,EAAaC,wFAE1BvB,QAAQ6J,MAAR/G,EAAAgH,qKAKiBtG,GACrB,IAAMzD,EAAWrB,KAAKqL,8BAChBpH,EAAOa,EAAKvC,cAAc+I,UAAUjK,IAC9B,MAAR4C,GAAgBA,aAAgBxD,GAChCT,KAAKgK,eAAe/F,yDAMxB,IAAMsH,EAAcC,SAASC,SAC7B,MAAoB,MAAhBF,EACO,eAEJA,mCAGe,IAAAG,EACgB1L,KAAK2G,MAApCkB,EADe6D,EACf7D,eAAgBtH,EADDmL,EACCnL,YACvB,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACgM,EAAD,CAAczL,oBAAqBF,KAAK+J,wBAC1BlC,eAAgBA,IAC9BpI,EAAAC,EAAAC,cAACiM,EAADhL,OAAAiL,OAAA,GAAgB7L,KAAK2G,MAArB,CACYT,WAAYlG,KAAKgK,eACjBhC,YAAahI,KAAK4K,gBAClB/C,eAAgBA,KAC5BpI,EAAAC,EAAAC,cAACmM,EAAD,CAAcvL,YAAaA,YApDPF,aCErB0L,EARO,WACpB,OACEtM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqM,EAAD,QCKcC,QACW,cAA7BC,OAAOV,SAASW,UAEe,UAA7BD,OAAOV,SAASW,UAEhBD,OAAOV,SAASW,SAASC,MACvB,4DCRN7C,EAFiB8C,EAAQ,KAAlB9C,QAEA9J,EAAAC,EAAAC,cAAC2M,EAAD,MAAQC,SAASC,eAAe,SD+HjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCE3InBC,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.ef863ebb.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nimport \"./EditorHeader.css\";\nimport Toggle from \"./Toggle\";\nimport MobileMenuToggleTriggerIcon from \"../../../icons/mobile-menu.svg\";\n\n\nexport default class EditorHeader extends Component<EditorHeaderProps> {\n\n    render(): React.ReactNode {\n        return (\n            <div className=\"editor-header\">\n                <div className=\"mobile-menu-toggle-trigger\">\n                    <img src={MobileMenuToggleTriggerIcon} onClick={this.props.onMobileMenuToggled}/>\n\n                    {/*<Toggle onClick={this.props.onMobileMenuToggled}*/}\n                    {/*        mobileMenuOpen={this.props.mobileMenuOpen}/>*/}\n                </div>\n                <div style={{flexGrow: 1}}>simonedegiacomi.dev</div>\n            </div>\n        );\n    }\n}\n\ninterface EditorHeaderProps {\n    onMobileMenuToggled: () => void,\n    mobileMenuOpen: boolean\n}\n\n","import React, {Component} from 'react';\n\nimport \"./EditorFooter.css\";\nimport File from \"../../../Models/File\";\n\nexport default class EditorFooter extends Component<EditorFooterProps> {\n\n    render(): React.ReactNode {\n        const {currentFile} = this.props;\n        return (\n            <div className=\"editor-footer\">\n                <div>\n                    {\n                        currentFile &&\n                        currentFile.getPath()\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface EditorFooterProps {\n    currentFile: File | null\n}\n","import Folder from \"./Folder\";\n\nexport default class File {\n\n    constructor(\n        public readonly container: Folder,\n        public readonly name: string\n    ) { }\n\n\n    getPath () {\n        return this.container.getPath() + this.name;\n    }\n}\n","import File from \"./File\";\n\nexport default class Folder {\n\n    content: (File|Folder)[] = [];\n\n    static createRoot(): Folder {\n        return new Folder(null, '');\n    }\n\n    constructor(\n        public readonly parentFolder: Folder | null,\n        public readonly name: string\n    ) { }\n\n\n    isRoot(): boolean {\n        return this.parentFolder === null;\n    }\n\n    add(fileOrFolder: (File | Folder)) {\n        this.content.push(fileOrFolder);\n    }\n\n    getPath (): string {\n        if (this.isRoot()) {\n            return '/';\n        }\n        // @ts-ignore\n        return `${this.parentFolder.getPath()}${this.name}/`;\n    }\n\n    getFileOrNull(filePath: string): File|Folder|null {\n        console.log('searching', filePath)\n        const pieces = filePath.split('/');\n\n        if (pieces[0] === this.name) {\n            pieces.splice(0, 1);\n        } else {\n            return null;\n        }\n\n        for (const item of this.content) {\n            if (item.name === pieces[0]) {\n                if (item instanceof File) {\n                    return item;\n                } else {\n                    return item.getFileOrNull(pieces.join('/'));\n                }\n            }\n        }\n\n        return null;\n    }\n}\n","import File from \"../Models/File\";\nimport Folder from \"../Models/Folder\";\n\nconst ROOT_URL = '/pages';\nconst FILE_INDEX_URL = `${ROOT_URL}/index.json`;\n\nexport default {\n\n    async getRoot(): Promise<Folder> {\n        const jsonRoot = await getAsJson(FILE_INDEX_URL);\n        return mapJsonFolderToRoot(jsonRoot);\n    },\n\n    async getFileContent(file: File): Promise<string> {\n        const url = `${ROOT_URL}${file.getPath()}`;\n\n        const res = await fetch(url);\n        return await res.text();\n    }\n}\n\nconst getAsJson = async (url: string): Promise<any> => {\n    const res = await fetch(url);\n    return await res.json();\n};\n\nconst mapJsonFolderToRoot = (jsonFolder: any[]): Folder => {\n    const root = Folder.createRoot();\n    insertFilesAndFoldersInFolder(root, jsonFolder);\n    return root;\n};\n\nconst insertFilesAndFoldersInFolder = (container: Folder, jsonFolder: any[]) => {\n    jsonFolder.forEach(jsonFileOrFolder => {\n        if (jsonFileOrFolder.type === \"file\") {\n            container.add(new File(container, jsonFileOrFolder.name));\n        } else {\n            const folder = new Folder(container, jsonFileOrFolder.name);\n            insertFilesAndFoldersInFolder(folder, jsonFileOrFolder.content);\n            container.add(folder);\n        }\n    });\n};\n\n","import React, {Component} from \"react\";\n\nimport FileIcon from \"../../../../icons/file.svg\";\nimport File from \"../../../../Models/File\";\nimport \"./FileComponent.css\";\n\nexport class FileComponent extends Component<FileComponentProps> {\n\n    render(): React.ReactNode {\n        const {file} = this.props;\n        return (\n            <span onClick={this.onOpenFile} className=\"file-icon-and-name\">\n                <img alt=\"file icon\" src={FileIcon} className=\"file-icon\"/>\n                {file.name}\n            </span>\n        );\n    }\n\n    onOpenFile = (event: React.MouseEvent<HTMLElement>) => {\n        event.stopPropagation();\n        this.props.onOpenFile(this.props.file);\n    }\n}\n\ninterface FileComponentProps {\n    file: File,\n    onOpenFile: (fileToOpen: File) => void\n}\n","import React, {Component, MouseEventHandler} from \"react\";\nimport classNames from 'classnames';\n\nimport File from \"../../../../Models/File\";\nimport Folder from \"../../../../Models/Folder\";\nimport {FileComponent} from \"./FileComponent\";\nimport \"./FolderComponent.css\";\nimport FolderToggleTriggerIcon from \"../../../../icons/folder-arrow.svg\";\n\nexport class FolderComponent extends Component<FolderComponentProps, FolderComponentState> {\n\n    state: FolderComponentState = {\n        expanded: true\n    };\n\n    render(): React.ReactNode {\n        const {folder} = this.props;\n        const {expanded} = this.state;\n        return (\n            <div onClick={this.handleClick}\n                 className={classNames({folder: true, expanded})}>\n                <div className=\"folder-name-and-toggler\">\n                    {\n                        !folder.isRoot() &&\n                        <img alt=\"folder icon\" src={FolderToggleTriggerIcon} className=\"folder-toggler\"/>\n                    }\n                    {folder.name}\n                </div>\n                {\n                    this.renderChildren()\n                }\n            </div>\n        );\n    }\n\n    handleClick:MouseEventHandler = (e) => {\n        e.stopPropagation();\n        if (!this.props.folder.isRoot()) {\n            this.setState(({expanded}, _) => ({expanded: !expanded}));\n        }\n    };\n\n    renderChildren() {\n        const {folder} = this.props;\n        return (\n            <ul>\n                {\n                    folder.content.map(fileOrFolder => (\n                        <li key={fileOrFolder.getPath()}>\n                            {\n                                this.renderFileOrFolder(fileOrFolder)\n                            }\n                        </li>\n                    ))\n                }\n            </ul>\n        );\n    }\n\n    renderFileOrFolder(fileOrFolder: File | Folder): React.ReactNode {\n        const {onOpenFile} = this.props;\n        if (fileOrFolder instanceof File) {\n            return <FileComponent file={fileOrFolder} onOpenFile={onOpenFile}/>;\n        } else if (fileOrFolder instanceof Folder) {\n            return <FolderComponent folder={fileOrFolder} onOpenFile={onOpenFile}/>;\n        } else {\n            return <p>Unknown item type</p>;\n        }\n    }\n}\n\ninterface FolderComponentProps {\n    folder: Folder,\n    onOpenFile: (fileToOpen: File) => void\n}\n\ninterface FolderComponentState {\n    expanded: boolean\n}\n","import React, {Component, ReactNode} from \"react\";\n\nimport \"./FileExplorerSidebar.css\";\nimport File from \"../../../../Models/File\";\nimport Folder from \"../../../../Models/Folder\";\nimport {FolderComponent} from \"./FolderComponent\";\nimport {FileOpener} from \"../../Editor\";\n\nexport default class FileExplorerSidebar extends Component<FileExplorerSidebarProps> {\n\n    render(): ReactNode {\n        const {root, onOpenFile} = this.props;\n        return (\n            <div className={this.getClasses()}>\n                {\n                    !root &&\n                    <p>Please wait</p>\n                }\n\n                {\n                    root &&\n                    <FolderComponent folder={root} onOpenFile={onOpenFile}/>\n                }\n            </div>\n        );\n    }\n\n    getClasses () {\n        let classes = \"file-explorer-sidebar \";\n        if (this.props.mobileMenuOpen) {\n            classes += \"mobile-menu-open\"\n        }\n        return classes;\n    }\n\n}\n\ninterface FileExplorerSidebarProps extends FileOpener{\n    root: Folder | null,\n    currentFile: File | null,\n    mobileMenuOpen: boolean\n}\n\n\n","import React, {FunctionComponent} from \"react\";\n\nimport File from \"../../../../Models/File\";\nimport \"./Tab.css\";\nimport CloseIcon from \"../../../../icons/close.svg\";\n\nexport const Tab: FunctionComponent<TabProps> = ({file, onSelectFile, onCloseFile, isCurrent}) => (\n    <div className={`tab ${isCurrent ? 'current-tab' : ''}`} onClick={onSelectFile}>\n        {\n            file.name\n        }\n        <div onClick={e => {e.stopPropagation(); onCloseFile();}}>\n            <img alt=\"close tab\" src={CloseIcon}/>\n        </div>\n    </div>\n);\n\ninterface TabProps{\n    file: File,\n    isCurrent: boolean,\n    onSelectFile: () => void,\n    onCloseFile: () => void\n}\n","import React, {Component} from 'react';\n\nimport File from \"../../../../Models/File\";\nimport {Tab} from \"./Tab\";\nimport \"./TabManager.css\"\nimport {FileCloser, FileOpener} from \"../../Editor\";\n\nexport default class TabManager extends Component<TabManagerProps> {\n\n    render(): React.ReactNode {\n        const {openedFiles, currentFile, onOpenFile, onCloseFile} = this.props;\n        return (\n            <div className=\"tabs-container\">\n                {\n                    openedFiles.map(file => (\n                        <Tab key={file.name}\n                             file={file}\n                             isCurrent={file === currentFile}\n                             onSelectFile={() => onOpenFile(file)}\n                             onCloseFile={() => onCloseFile(file)}/>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\n\ninterface TabManagerProps extends FileOpener, FileCloser {\n    currentFile: File | null,\n    openedFiles: File[]\n}\n","import React from 'react';\n\nimport LeftArrow from \"../../../../../icons/arrow-left.svg\";\nimport \"./OpenFileFromSidebar.css\";\n\nexport const OpenFileFromSidebar: React.FunctionComponent = () => (\n    <div className=\"open-from-sidebar\">\n        <img alt=\"arrow pointing sidebar\" src={LeftArrow}/>\n        <p>Open a file from the left</p>\n    </div>\n);\n","import React from \"react\";\nimport \"./DownloadingFileContent.css\";\n\nexport const DownloadingFileContent: React.FunctionComponent = () => (\n    <div className=\"loading-content\">\n        <div className=\"loading-content-spinner-container\">\n            <div className=\"spinner-border loading-content-spinner\" role=\"status\"/>\n        </div>\n        Downloading ...\n    </div>\n);\n","import React, {Component} from 'react';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItContainer from 'markdown-it-container';\n\nimport File from \"../../../../Models/File\";\nimport FilesService from \"../../../../Services/FilesService\";\nimport './FileViewer.css';\nimport './styles/history-list.css';\nimport {OpenFileFromSidebar} from \"./OpenFileFromSidebar/OpenFileFromSidebar\";\nimport {DownloadingFileContent} from \"./DownloadingFileContent/DownloadingFileContent\";\n\nexport default class FileViewer extends Component<FileViewerProps> {\n\n    private markdownRenderer = new MarkdownIt({html: true})\n        .use(MarkdownItContainer, 'history-list')\n        .use(MarkdownItContainer, 'history-list-item-multiple-paragraphs');\n\n    state: { content: string | null } = {\n        content: null\n    };\n\n    async componentDidUpdate(prevProps: Readonly<FileViewerProps>, prevState: Readonly<{}>, snapshot?: any): Promise<void> {\n        if (this.props.currentFile === prevProps.currentFile) {\n            return;\n        }\n        await this.downloadFileContent();\n    }\n\n    async downloadFileContent():Promise<void> {\n        this.setState({content: null});\n        const {currentFile} = this.props;\n        if (currentFile == null) {\n            return;\n        }\n        const content = await FilesService.getFileContent(currentFile);\n        this.setState({content});\n    }\n\n    render(): React.ReactNode {\n        if (!this.props.currentFile) {\n            return <OpenFileFromSidebar/>;\n        } else if (!this.state.content) {\n            return <DownloadingFileContent/>;\n        }\n        return this.renderFileContent();\n    }\n\n    renderFileContent() {\n        if (!this.state.content) {\n            return;\n        }\n        const html = this.markdownRenderer.render(this.state.content);\n        return (\n            <div className=\"file-viewer\">\n                <div className=\"container file-content-container\"\n                     dangerouslySetInnerHTML={{__html: html}}>\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface FileViewerProps {\n    currentFile: File | null\n}\n\n","import React from \"react\";\nimport FileExplorerSidebar from \"./FileExplorerSidebar/FileExplorerSidebar\";\nimport TabManager from \"./TabManager/TabManager\";\nimport FileViewer from \"./FileViewer/FileViewer\";\nimport {EditorState, FileCloser, FileOpener} from \"../Editor\";\nimport \"./EditorBody.css\";\n\nexport const EditorBody: React.FunctionComponent<EditorBodyProps> = ({root, openedFiles, currentFile, onOpenFile, onCloseFile, mobileMenuOpen}) => (\n    <div className=\"editor-body\">\n        <FileExplorerSidebar root={root} currentFile={currentFile} onOpenFile={onOpenFile} mobileMenuOpen={mobileMenuOpen}/>\n\n        <div className=\"editor-center\">\n            <TabManager currentFile={currentFile} openedFiles={openedFiles} onOpenFile={onOpenFile} onCloseFile={onCloseFile}/>\n            <FileViewer currentFile={currentFile}/>\n        </div>\n    </div>\n);\n\n// TODO: Wrong usage of extend\ninterface EditorBodyProps extends EditorState, FileOpener, FileCloser {}\n","import React, {Component} from \"react\";\n\nimport \"./Editor.css\";\nimport EditorHeader from \"./EditorHeader/EditorHeader\";\nimport EditorFooter from \"./EditorFooter/EditorFooter\";\nimport File from \"../../Models/File\";\nimport Folder from \"../../Models/Folder\";\nimport FilesService from \"../../Services/FilesService\";\nimport {EditorBody} from \"./EditorBody/EditorBody\";\n\nexport default class Editor extends Component<any, EditorState> {\n\n    state: EditorState = {\n        root: null,\n        openedFiles: [],\n        currentFile: null,\n\n        mobileMenuOpen: false\n    };\n\n    async componentDidMount() {\n        const root = await this.fetchRoot();\n        this.setState({root});\n        this.openFileFromUrlOrDefault(root);\n    }\n\n    async fetchRoot(): Promise<Folder> {\n        try {\n            return await FilesService.getRoot();\n        } catch (e) {\n            console.error(e);\n            throw e;\n        }\n    }\n\n    openFileFromUrlOrDefault(root: Folder) {\n        const filePath = this.getFilePathFromUrlOrDefault();\n        const file = root.getFileOrNull(decodeURI(filePath));\n        if (file != null && file instanceof File) {\n            this.handleOpenFile(file);\n        }\n    }\n\n    getFilePathFromUrlOrDefault() {\n        // eslint-disable-next-line no-restricted-globals\n        const pathFromUrl = location.pathname;\n        if (pathFromUrl === '/') {\n            return '/About me.md';\n        }\n        return pathFromUrl;\n    }\n\n    render(): React.ReactNode {\n        const {mobileMenuOpen, currentFile} = this.state;\n        return (\n            <div className=\"editor\">\n                <EditorHeader onMobileMenuToggled={this.handleMobileMenuToggled}\n                              mobileMenuOpen={mobileMenuOpen}/>\n                <EditorBody {...this.state}\n                            onOpenFile={this.handleOpenFile}\n                            onCloseFile={this.handleCloseFile}\n                            mobileMenuOpen={mobileMenuOpen}/>\n                <EditorFooter currentFile={currentFile}/>\n            </div>\n        );\n    }\n\n    handleMobileMenuToggled = () => {\n        this.setState(({mobileMenuOpen}) => {\n            return {\n                mobileMenuOpen: !mobileMenuOpen\n            };\n        });\n    };\n\n    // TODO: Maybe rename to showFile\n    handleOpenFile = (fileToOpen: File) => this.setState(state => {\n        let newState;\n        if (this.isFileAlreadyOpenInState(state, fileToOpen)) {\n            newState = this.getStateUpdateWithFileAsCurrent(fileToOpen);\n        } else {\n            newState = this.getStateUpdateWithNewOpenFile(state, fileToOpen);\n        }\n        this.updateUrlWithCurrentFile(newState.currentFile);\n        return {\n            ...newState,\n            mobileMenuOpen: false\n        };\n    });\n\n\n    isFileAlreadyOpenInState = (state: EditorState, file: File) => state.openedFiles.indexOf(file) >= 0;\n\n    getStateUpdateWithFileAsCurrent = (file: File) => ({currentFile: file});\n\n    getStateUpdateWithNewOpenFile = (state: EditorState, fileToOpen: File) => ({\n        openedFiles: [...state.openedFiles, fileToOpen],\n        currentFile: fileToOpen\n    });\n\n    updateUrlWithCurrentFile = (currentFile: File) => {\n        // eslint-disable-next-line no-restricted-globals\n        history.pushState({}, currentFile.name, currentFile.getPath());\n    };\n\n    handleCloseFile = (fileToClose: File) => this.setState((state) => {\n        const openedFiles = this.getFileArrayWithoutFile(state.openedFiles, fileToClose);\n        return {\n            openedFiles,\n            currentFile: state.currentFile === fileToClose ? openedFiles[openedFiles.length - 1] : state.currentFile\n        }\n    });\n\n    getFileArrayWithoutFile = (files: File[], file: File) => {\n        const copy = [...files];\n        copy.splice(copy.indexOf(file), 1);\n        return copy;\n    }\n}\n\nexport interface EditorState {\n    root: Folder | null,\n    openedFiles: File[],\n    currentFile: File | null,\n\n    mobileMenuOpen: boolean\n}\n\nexport interface FileOpener {\n    onOpenFile: (fileToOpen: File) => void\n}\n\nexport interface FileCloser {\n    onCloseFile: (fileToClose: File) => void\n}\n\n","import React from 'react';\n\nimport Editor from \"./Components/Editor/Editor\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Editor/>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './index.css';\nimport './variables.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst {render} = require('react-snapshot');\n\nrender(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mobile-menu.29715c20.svg\";","module.exports = __webpack_public_path__ + \"static/media/file.bc7dabe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/folder-arrow.4a58a7fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.b77a1b38.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-left.77ee5615.svg\";"],"sourceRoot":""}